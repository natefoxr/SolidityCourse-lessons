{
    "address": "0x852e0e76BFf546Bff93C2E9cd7c564455B1ba787",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotEnoughEth",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0x6530f1d8ee5320ec4574e6682b1552daf45c10d681b28729feb9e66d102ca612",
    "receipt": {
        "to": null,
        "from": "0x14fDbE3B558Ea2B723F0dF37f136F7490E54126d",
        "contractAddress": "0x852e0e76BFf546Bff93C2E9cd7c564455B1ba787",
        "transactionIndex": 25,
        "gasUsed": "982009",
        "logsBloom": "0x
        "blockHash": "0xdba7fe1b5246188b2fa4e1f9bfec55f998c84ecbc175cb6c7b484463ce6031b9",
        "transactionHash": "0x6530f1d8ee5320ec4574e6682b1552daf45c10d681b28729feb9e66d102ca612",
        "logs": [],
        "blockNumber": 7752594,
        "cumulativeGasUsed": "6046301",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 2,
    "solcInputHash": "c39fc4bb0613835a9563bdb9a265e365",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nathan Moudakis\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This function is executed by running against the ETHUSD chainlink oracle to get a minimum price of $10\"},\"withdraw()\":{\"details\":\"This functions iterates through the funders to update a map reseting the funding balance\"}},\"title\":\"A contract from crowdfunding or donations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"},\"withdraw()\":{\"notice\":\"This function allows the owner to withdrawn funds from the contract\"}},\"notice\":\"This contract is a funding  contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Gas cost 837,437 - Original\\n// Gas cost 817,443 - Constant\\n// Gas cost 813,954 - Immuatable\\n// Gas cost 794,008 - Constant and Immutable\\n// Gas cost 715,218 - Constant, Immutable and Error Handling\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughEth();\\n\\n/// @title A contract from crowdfunding or donations\\n/// @author Nathan Moudakis\\n/// @notice This contract is a funding  contract\\n/// @dev This implements price feeds as our library\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 10**8;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /// @notice This function funds the contract\\n    /// @dev This function is executed by running against the ETHUSD chainlink oracle to get a minimum price of $10\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe__NotEnoughEth();\\n        }\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    /// @notice This function allows the owner to withdrawn funds from the contract\\n    /// @dev This functions iterates through the funders to update a map reseting the funding balance\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address s_funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[s_funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // View / Pure\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x5207af675a6117f541e4e69eff5b6ba5eaaf101b00664b6795aeed66e84633e8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2cbfa63af91d30f04a5873013843ad1932439bfadf647c818047670962430eda\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011eb380380620011eb833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61106562000186600039600081816101f10152818161043b015281816105a6015261079c01526110656000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a5f565b6101a6565b6040516100b49190610aa5565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610aa5565b60405180910390f35b34801561010b57600080fd5b50610114610437565b6040516101219190610acf565b60405180910390f35b34801561013657600080fd5b5061013f61045f565b60405161014c9190610b49565b60405180910390f35b61015d610489565b005b6101676105a4565b005b34801561017557600080fd5b50610190600480360381019061018b9190610b90565b610832565b60405161019d9190610acf565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610bbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c1b565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610c64565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f929190610955565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610cc4565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d36565b60405180910390fd5b50565b633b9aca0081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b633b9aca006104c3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087990919063ffffffff16565b10156104fb576040517f5ed3980900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610629576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ac57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610662575b5050505050905060005b81518110156107375760008282815181106106d4576106d3610bbd565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072f90610c1b565b9150506106b6565b50600067ffffffffffffffff81111561075357610752610c64565b5b6040519080825280602002602001820160405280156107815781602001602082028036833780820191505090505b5060009080519060200190610797929190610955565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107de90610cc4565b60006040518083038185875af1925050503d806000811461081b576040519150601f19603f3d011682016040523d82523d6000602084013e610820565b606091505b505090508061082e57600080fd5b5050565b600080828154811061084757610846610bbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610885836108b5565b90506000670de0b6b3a7640000858361089e9190610d56565b6108a89190610ddf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108fe57600080fd5b505afa158015610912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109369190610e9d565b5050509150506402540be4008161094d9190610f18565b915050919050565b8280548282559060005260206000209081019282156109ce579160200282015b828111156109cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610975565b5b5090506109db91906109df565b5090565b5b808211156109f85760008160009055506001016109e0565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2c82610a01565b9050919050565b610a3c81610a21565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a746109fc565b5b6000610a8384828501610a4a565b91505092915050565b6000819050919050565b610a9f81610a8c565b82525050565b6000602082019050610aba6000830184610a96565b92915050565b610ac981610a21565b82525050565b6000602082019050610ae46000830184610ac0565b92915050565b6000819050919050565b6000610b0f610b0a610b0584610a01565b610aea565b610a01565b9050919050565b6000610b2182610af4565b9050919050565b6000610b3382610b16565b9050919050565b610b4381610b28565b82525050565b6000602082019050610b5e6000830184610b3a565b92915050565b610b6d81610a8c565b8114610b7857600080fd5b50565b600081359050610b8a81610b64565b92915050565b600060208284031215610ba657610ba56109fc565b5b6000610bb484828501610b7b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2682610a8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5957610c58610bec565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cae600083610c93565b9150610cb982610c9e565b600082019050919050565b6000610ccf82610ca1565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d20600b83610cd9565b9150610d2b82610cea565b602082019050919050565b60006020820190508181036000830152610d4f81610d13565b9050919050565b6000610d6182610a8c565b9150610d6c83610a8c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da557610da4610bec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dea82610a8c565b9150610df583610a8c565b925082610e0557610e04610db0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2f81610e10565b8114610e3a57600080fd5b50565b600081519050610e4c81610e26565b92915050565b6000819050919050565b610e6581610e52565b8114610e7057600080fd5b50565b600081519050610e8281610e5c565b92915050565b600081519050610e9781610b64565b92915050565b600080600080600060a08688031215610eb957610eb86109fc565b5b6000610ec788828901610e3d565b9550506020610ed888828901610e73565b9450506040610ee988828901610e88565b9350506060610efa88828901610e88565b9250506080610f0b88828901610e3d565b9150509295509295909350565b6000610f2382610e52565b9150610f2e83610e52565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6d57610f6c610bec565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610faa57610fa9610bec565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fe757610fe6610bec565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102457611023610bec565b5b82820290509291505056fea26469706673582212200c2eb0caf08562cbf384fb4d6473e218825e84c8d0a2851be59875a6746f81f764736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a5f565b6101a6565b6040516100b49190610aa5565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610aa5565b60405180910390f35b34801561010b57600080fd5b50610114610437565b6040516101219190610acf565b60405180910390f35b34801561013657600080fd5b5061013f61045f565b60405161014c9190610b49565b60405180910390f35b61015d610489565b005b6101676105a4565b005b34801561017557600080fd5b50610190600480360381019061018b9190610b90565b610832565b60405161019d9190610acf565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610bbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c1b565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610c64565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f929190610955565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610cc4565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d36565b60405180910390fd5b50565b633b9aca0081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b633b9aca006104c3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087990919063ffffffff16565b10156104fb576040517f5ed3980900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610629576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ac57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610662575b5050505050905060005b81518110156107375760008282815181106106d4576106d3610bbd565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072f90610c1b565b9150506106b6565b50600067ffffffffffffffff81111561075357610752610c64565b5b6040519080825280602002602001820160405280156107815781602001602082028036833780820191505090505b5060009080519060200190610797929190610955565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107de90610cc4565b60006040518083038185875af1925050503d806000811461081b576040519150601f19603f3d011682016040523d82523d6000602084013e610820565b606091505b505090508061082e57600080fd5b5050565b600080828154811061084757610846610bbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610885836108b5565b90506000670de0b6b3a7640000858361089e9190610d56565b6108a89190610ddf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108fe57600080fd5b505afa158015610912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109369190610e9d565b5050509150506402540be4008161094d9190610f18565b915050919050565b8280548282559060005260206000209081019282156109ce579160200282015b828111156109cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610975565b5b5090506109db91906109df565b5090565b5b808211156109f85760008160009055506001016109e0565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2c82610a01565b9050919050565b610a3c81610a21565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a746109fc565b5b6000610a8384828501610a4a565b91505092915050565b6000819050919050565b610a9f81610a8c565b82525050565b6000602082019050610aba6000830184610a96565b92915050565b610ac981610a21565b82525050565b6000602082019050610ae46000830184610ac0565b92915050565b6000819050919050565b6000610b0f610b0a610b0584610a01565b610aea565b610a01565b9050919050565b6000610b2182610af4565b9050919050565b6000610b3382610b16565b9050919050565b610b4381610b28565b82525050565b6000602082019050610b5e6000830184610b3a565b92915050565b610b6d81610a8c565b8114610b7857600080fd5b50565b600081359050610b8a81610b64565b92915050565b600060208284031215610ba657610ba56109fc565b5b6000610bb484828501610b7b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2682610a8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5957610c58610bec565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cae600083610c93565b9150610cb982610c9e565b600082019050919050565b6000610ccf82610ca1565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d20600b83610cd9565b9150610d2b82610cea565b602082019050919050565b60006020820190508181036000830152610d4f81610d13565b9050919050565b6000610d6182610a8c565b9150610d6c83610a8c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da557610da4610bec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dea82610a8c565b9150610df583610a8c565b925082610e0557610e04610db0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2f81610e10565b8114610e3a57600080fd5b50565b600081519050610e4c81610e26565b92915050565b6000819050919050565b610e6581610e52565b8114610e7057600080fd5b50565b600081519050610e8281610e5c565b92915050565b600081519050610e9781610b64565b92915050565b600080600080600060a08688031215610eb957610eb86109fc565b5b6000610ec788828901610e3d565b9550506020610ed888828901610e73565b9450506040610ee988828901610e88565b9350506060610efa88828901610e88565b9250506080610f0b88828901610e3d565b9150509295509295909350565b6000610f2382610e52565b9150610f2e83610e52565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6d57610f6c610bec565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610faa57610fa9610bec565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fe757610fe6610bec565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102457611023610bec565b5b82820290509291505056fea26469706673582212200c2eb0caf08562cbf384fb4d6473e218825e84c8d0a2851be59875a6746f81f764736f6c63430008080033",
    "devdoc": {
        "author": "Nathan Moudakis",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This function is executed by running against the ETHUSD chainlink oracle to get a minimum price of $10"
            },
            "withdraw()": {
                "details": "This functions iterates through the funders to update a map reseting the funding balance"
            }
        },
        "title": "A contract from crowdfunding or donations",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds the contract"
            },
            "withdraw()": {
                "notice": "This function allows the owner to withdrawn funds from the contract"
            }
        },
        "notice": "This contract is a funding  contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 76,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
